=== Development Setup ===
The following description assumes that you will be writing your application in PHP which does not require a compilation step and no object code is generated.

First create a top-level directory which will be called _applicationDir_ for the rest of this document.  It is a good practice to use the same directory name as the Facebook directory name.  For example, in the sample _Send-A-Card_ application, the top-level directory is called `sendacard`.

Later we will discuss where to install this top-level directory.

==== _The Open Face Framework_ ====
Create a second-level directory called `openface`.  Download the Open Face Framework from http://www.openfaceframework.org into this directory.  This is the only directory used to store files from the Open Face Framework.  All other directories under the top-level directory is used by your application.  

==== _Application Directories_ =====
It is recommended that you create the following second-level directories:

  `css images images.demo js php xml`

You can place the source files of your application into these directories.  The name of a directory defines the type of file that will be stored in the directory.  

==== css ====
All `*.css` files are placed in the _applicationDir_`/css` directory.  Open Face will automatically include every file in this directory in a style tag like this:

`<style type="text/css">app.css</style>`

==== js ====
All `*.js` files are placed in the applicationDir/js directory.  Open Face will automatically include every file in this directory in a script tag like this:

`<script src="app.js"/>`

==== images ====
All graphics files used from development to production are placed in the _applicationDir_`/images` directory.  Open Face provides helper methods to generate HTML <img> tags with the assumption that all images are stored in this directory. 

==== images.demo ====
Sometimes you may have images used only for demonstration purposes.  These images are not the production images.

==== xml ====
Sometimes your application may have xml files too.  For example, Open Social containers require an xml file to register your application.

==== php ====
All PHP files are placed in the _applicationDir_`/php` directory.  In order to manage the complexity, the PHP files are further organized into subdirectories:

  `actions dialogs models opf portlets views`

==== actions ====
When the user clicks on a button to submit the contents of a form, the contents of the form are POSTed to an ëactioní which is invoked.

==== dialogs ====
Dialogs are commonly used dialogs like the Invite Friend dialog.

==== models ====
Open Face Framework implements the model-view-controller pattern.  The models directory stores the classes that implements the views.

==== opf ====
This sub-directory stores configuration files in the syntax of PHP.  These files provide constants for the Openface Framework to do its work.

==== portlets ====
_Portlet_ classes are stored here.

==== views ====
Open Face Framework implements the model-view-controller pattern.  The views directory stores the classes that implements the views.  Specifically the _frame_ and _canvas_ classes are stored here.

=== Deployment ===

==== _Set up on web host_ ====
  * 5. (a) - set up on host Joyent/Freehostia
   * 5.a (i) on Freehostia, you can have subdomains right in your www root, which is where we put our SendACard directory.
YOU SHOULD NOW HAVE A COMPLETE URL TO REFER TO: e.g.:
Joyent: http://www.joyent.com[/?/? - Need FURTHER DETAIL HERE]
Freehostia: http://sendacard.freehostia.com/fb.dev/openface/php/index.php?opf_postInstall=
  * set up on Facebook [WOULD A LINK BE SUFFICIENT, OR IS MORE DETAIL NEEDED HERE?]
  * Copy the entire "sendacard" directory with contents into this folder (whichever host)
  * Go to the OpfApplicationConfig.php and verify that any DATABASE variables are commented for non-DB apps (why is this necessary?), or tied to the correct location for DB Apps.  These variables are dependant on the database and application hosting environment.
  * 5.a (ii) on Joyent, you are given a unix-like path where you receive a ./web/public folder, under which the "sendacard" app needs to be copied.
You need to create an account and be informed that your level of

==== _Set up on Container ñ Facebook_ ====
5.(b) -  Add the Developer application (see Facebook for the latest instructions) and register the new app. "Apply for Application Key" generates two variables for you.  These two (API Key & Secret) must be placed in this  OpfApplicationConfig.php file for the application to be recognized by FB
Click "Edit Settings" to change CallBack URL variable which needs to go to "openface\php", where the index.php is located
CanvasPageURL is also created here and placed in the OpfApplicationConfig.php file.
Ensure that FBML is being used, and not iFrame.  Leave everything else as default
Verify that the App _CAN_ be added on FB - this enables installation.  This opens up the Installation OPTIONS dialogue:
 
Post ADD URL needs to be put in from above: http://sendacard.freehostia.com/fb.dev/openface/php/index.php?opf_postInstall=
And Post-Remove URL as well: http://sendacard.freehostia.com/fb.dev/openface/php/index.php?opf_postUninstall=
 
Choose your own preferences, as in "Developer Install only", which keeps normal users away from app, and "Private Installation", which suppresses news feed generation
 
NOW we verify that php\MODELS is configured, which handles DATABASE interaction.  This is specific to applications that utilize database interaction.  GiveToPersonAction.php is an example in SendACard app.  If there is no database backend, then the application is ready for execution.  Point your browser to the path set up in 5(b) above.
