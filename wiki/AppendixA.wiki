=== Appendix A:		Open Face Framework source files ===
The `openface` directory contains source files from the Open Face Framework. You should not modify any file inside. 

|| css || Open Face css files ||
|| images || Open Face graphic image files ||
|| js || Open Face Javascript files ||
|| LICENSE.txt || Open Face license ||
|| php || Open Face PHP files. Details are described in the following sections ||

==== openface/php ====
|| help.php || It calls `php/opf/OpfHelp.php` to launch the help command which is located on the upper right hand corner of the application ||
|| index.php || This is the main entry point of the application. On Facebook you should register the callback URL as `$APP_CALLBACK_URL/openface/php/index.php` ||
|| OpfConfig.php || It contains global configuration parameters used by Open Face Framework. The application should not directly reference these constants because they may change ||
|| OpfContext.php || It contains a runtime object used by Open Face Framework. The application should not directly reference this class ||
|| OpfDebugUtil.php || It contains some debugging methods. The application may call these methods. NOTE: The author considers this module 'can be improved' and will enhance it in the future ||
|| OpfLocalization.php || It contains localized strings used by Open Face Framework. The application should not directly reference this class ||
|| OpfSystemProfile.php || It contains some system parameters used by Open Face Framework. The application should not directly reference this class ||

==== openface/php/core ====
|| OpfCoreWebObject.php || It is the parent class of some classes in `openface/php/views`. The application should not directly reference this class ||

==== openface/php/controllers ====
|| OpfController.php || It is the main controller of Open Face Framework. It will calls `OpfApplication::getMainFrame` to create a main frame object that renders the application || 
|| OpfControllerPostInstall.php || It is called after the user installs the application. It calls `OpfApplication::registerUser` ||
|| OpfControllerPostUninstall.php || It is called after the user uninstalls the application. It calls `OpfApplication::unregisterUser` || 

==== openface/php/views ====
*Definition*

*frame*

A frame is the outermost user interface element of the application. The Open Face controller renders a 'main' frame that contains the rest of the application. 

A frame contains several user interface elements: 
  * an optional row of hyperlinks at the top with an underline
  * the application name
  * an optional list of buttons
  * an optional row of canvas names
  * a canvas

*canvas*

Typically an application shows a different canvas depending on the user operation. For example, in the sendACard application, there can be four canvases: 
  * Cards I can select to send
  * Inbox with cards friends sent to me
  * Outbox with cards I sent to friends
  * Cards I have kept

The contents of each canvas can be completely different from each other. 

*panel*

A canvas can have multiple variations inside. For example, in the Cards I can select to send canvas, cards may be organized by category such as Christmas, birthday, friendship, Thanksgiving, ... etc. Each category can be a _panel_ showing only cards in that category.

|| OpfUIObject.php || It is the parent class of other Open Face classes. Application should not directly reference this class ||
|| OpfFrameSingleCanvas.php || It implements a frame with only one canvas. There is no row of canvas names. Application may subclass from it to create its 'main' frame. This is not typical ||
|| OpfFrameMultiCanvas.php || It implements a frame with a row of canvas names below the application name. Application may subclass from it to create its 'main' frame ||
|| OpfFrameMultiCanvas2.php || It implements a frame with two rows of canvas names: one row at the top and one row below the application name. Application may subclass from it to create its 'main' frame ||
|| OpfCanvasHelp.php || It implements the canvas when the user clicks on help ||
|| OpfCanvasMultiPanel.php || It implements a canvas that has multiple sub-panels. Application may subclass from it to create a canvas class ||
|| OpfCanvas.php || It is the parent class of all application canvas classes. Application must subclass from it to create a canvas class ||
|| OpfExecuteAction.php || OpfFrame`*` calls this class to executes actions. Application may subclass from it to call its actions ||
|| OpfPanel.php || It is the parent class of all application panel classes. Application must subclass from it to create a panel class ||
|| OpfWebParam.php || It is the parent class of OpfFormParam.php and OpfUrlParam.php. Application should not directly reference this class ||
|| OpfFormParam.php || It is a helper class to construct HTML FORM parameters ||
|| OpfUrlParam.php || It is a helper class to construct URL parameters typically used in HREF ||
